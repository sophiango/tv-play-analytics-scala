version: "3.8"

services:
    zookeeper:
        image: confluentinc/cp-zookeeper:7.5.0
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181

    kafka:
        image: confluentinc/cp-kafka:7.5.0
        container_name: kafka
        ports:
            - "9092:9092"       # host access (for CLI)
            - "29092:29092"     # internal access (for Flink, Kafka UI)
        depends_on:
            - zookeeper
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    kafka-ui:
        image: provectuslabs/kafka-ui:latest
        ports:
            - "8080:8080"
        environment:
            KAFKA_CLUSTERS_0_NAME: local
            KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
        depends_on:
            - kafka

    jobmanager:
        container_name: jobmanager
        build:
            context: .
            dockerfile: Dockerfile.flink
        ports:
            - "8081:8081"
        command: jobmanager
        environment:
            - |
                FLINK_PROPERTIES=
                jobmanager.rpc.address: jobmanager
        volumes:
            - ./flink-checkpoints:/tmp/flink-checkpoints
            - ./iceberg_warehouse:/iceberg/warehouse
            - ./init.sql:/flink-sql/init.sql
            - ./flink-config/log4j-console.properties:/opt/flink/conf/log4j-console.properties
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:8081" ]
            interval: 10s
            timeout: 5s
            retries: 5


    taskmanager:
        container_name: taskmanager
        build:
            context: .
            dockerfile: Dockerfile.flink
        depends_on:
            jobmanager:
                condition: service_healthy
        command: taskmanager
        environment:
            - |
                FLINK_PROPERTIES=
                jobmanager.rpc.address: jobmanager
        volumes:
            - ./flink-checkpoints:/tmp/flink-checkpoints
            - ./iceberg_warehouse:/iceberg/warehouse
            - ./flink-config/log4j-console.properties:/opt/flink/conf/log4j-console.properties

#    sql-client:
##        image: flink:1.17-scala_2.12
#        build:
#            context: .
#            dockerfile: Dockerfile.flink
#        container_name: sql-client
#        depends_on:
#            - jobmanager
#            - kafka
#        restart: on-failure
#        entrypoint: >
#            bash -c "sleep 10 &&
#                     ./bin/sql-client.sh -f /flink-sql/init.sql"
#        volumes:
#            - ./init.sql:/flink-sql/init.sql
##            - ./flink-config:/opt/flink/conf
#            - ./flink-config/log4j-console.properties:/opt/flink/conf/log4j-console.properties
##            - ./jars:/opt/flink/lib
